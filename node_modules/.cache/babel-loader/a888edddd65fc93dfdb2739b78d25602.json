{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js\";\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/user.actions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Login extends Form {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const query = this.state.query;\n\n      if (query) {\n        this.props.onFetchStories(query);\n        this.setState({\n          user: {\n            email: \"\",\n            password: \"\"\n          }\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      this.setState({\n        query: value\n      });\n    };\n\n    this.state = {\n      user: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.query,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nconst validate = fromValue => {\n  const schema = {\n    email: Joi.string().required().label(\"Email\"),\n    password: Joi.string().required().label(\"Password\")\n  };\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(fromValue, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst LoginMap = connect(mapStateToProps, {\n  login\n})(Login);\nexport default reduxForm({\n  form: 'loginForm',\n  validate: validate\n})(LoginMap);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","login","Button","Grid","Container","Typography","Login","constructor","props","handleSubmit","e","preventDefault","query","state","onFetchStories","setState","user","email","password","handleChange","value","target","render","validate","fromValue","schema","string","required","label","options","abortEarly","error","errors","item","details","path","message","mapStateToProps","LoginMap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/user.actions';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Login extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                email: \"\",\n                password: \"\"\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { query } = this.state;\n        if (query) {\n            this.props.onFetchStories(query);\n            this.setState({\n                user: {\n                    email: \"\",\n                    password: \"\"\n                }\n            });\n        }\n\n    }\n    handleChange = e => {\n        const { value } = e.target;\n        this.setState({ query: value });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={this.state.query}\n                    onChange={this.handleChange}\n                />\n\n                <Button type=\"submit\">Search</Button>\n            </form>\n        )\n    }\n}\n\nconst validate = (fromValue) => {\n    const schema = {\n        email: Joi.string()\n            .required()\n            .label(\"Email\"),\n        password: Joi.string()\n            .required()\n            .label(\"Password\")\n    };\n\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(fromValue, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n        errors[item.path[0]] = item.message;\n    }\n    return errors;\n}\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    };\n}\n\nconst LoginMap = connect(mapStateToProps, { login })(Login)\n\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate: validate\n})(LoginMap);"]},"metadata":{},"sourceType":"module"}