{"ast":null,"code":"import { API_URL } from '../api';\nimport { GET_PRODUCTS, CREATE_PRODUCT, UPDATE_PRODUCTS, DELETE_PRODUCTS } from './actionsTypes';\nimport axios from 'axios';\nexport function getProducts() {\n  return dispatch => {\n    axios.get(\"\".concat(API_URL, \"/products\")).then(response => dispatch(getProductsSuccess(response.data))).catch(error => console.error('getAPIProducts failed:', error));\n  };\n}\nexport function getProductsSuccess(payload) {\n  return {\n    type: GET_PRODUCTS,\n    payload\n  };\n}\nexport function createProduct(payload) {\n  return dispatch => {\n    axios.post(\"\".concat(API_URL, \"/products\"), payload).then(() => dispatch(createProductSuccess(payload))).catch(error => console.error('createProduct failed:', error));\n  };\n}\nexport function createProductSuccess(payload) {\n  return {\n    type: CREATE_PRODUCT,\n    payload\n  };\n}\nexport function updateProduct(payload) {\n  return dispatch => {\n    axios.put(\"\".concat(API_URL, \"/products/\").concat(payload.id), payload).then(() => dispatch(updateProductSuccess(payload))).catch(error => console.error('updateProduct failed:', error));\n  };\n}\nexport function updateProductSuccess(payload) {\n  return {\n    type: UPDATE_PRODUCTS,\n    payload\n  };\n}\nexport function deleteProduct(id) {\n  return dispatch => {\n    axios.delete(\"\".concat(API_URL, \"/products/\").concat(id)).then(() => dispatch(deleteProductSuccess(id))).catch(error => console.error('deleteProduct failed:', error));\n  };\n}\n\nfunction deleteProductSuccess(id) {\n  return {\n    type: DELETE_PRODUCTS,\n    id\n  };\n}","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/actions/productActions.js"],"names":["API_URL","GET_PRODUCTS","CREATE_PRODUCT","UPDATE_PRODUCTS","DELETE_PRODUCTS","axios","getProducts","dispatch","get","then","response","getProductsSuccess","data","catch","error","console","payload","type","createProduct","post","createProductSuccess","updateProduct","put","id","updateProductSuccess","deleteProduct","delete","deleteProductSuccess"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,eAJJ,QAKO,gBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAOC,QAAQ,IAAI;AACfF,IAAAA,KAAK,CACAG,GADL,WACYR,OADZ,gBAEKS,IAFL,CAEUC,QAAQ,IAAIH,QAAQ,CAACI,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAF9B,EAGKC,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC,CAHpB;AAIH,GALD;AAMH;AAED,OAAO,SAASH,kBAAT,CAA4BK,OAA5B,EAAqC;AACxC,SAAO;AAAEC,IAAAA,IAAI,EAAEhB,YAAR;AAAsBe,IAAAA;AAAtB,GAAP;AACH;AAED,OAAO,SAASE,aAAT,CAAuBF,OAAvB,EAAgC;AACnC,SAAOT,QAAQ,IAAI;AACfF,IAAAA,KAAK,CACAc,IADL,WACanB,OADb,gBACiCgB,OADjC,EAEKP,IAFL,CAEU,MAAMF,QAAQ,CAACa,oBAAoB,CAACJ,OAAD,CAArB,CAFxB,EAGKH,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAHpB;AAIH,GALD;AAMH;AAED,OAAO,SAASM,oBAAT,CAA8BJ,OAA9B,EAAuC;AAC1C,SAAO;AAAEC,IAAAA,IAAI,EAAEf,cAAR;AAAwBc,IAAAA;AAAxB,GAAP;AACH;AAED,OAAO,SAASK,aAAT,CAAuBL,OAAvB,EAAgC;AACnC,SAAOT,QAAQ,IAAI;AACfF,IAAAA,KAAK,CACAiB,GADL,WACYtB,OADZ,uBACgCgB,OAAO,CAACO,EADxC,GAC8CP,OAD9C,EAEKP,IAFL,CAEU,MAAMF,QAAQ,CAACiB,oBAAoB,CAACR,OAAD,CAArB,CAFxB,EAGKH,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAHpB;AAIH,GALD;AAMH;AAED,OAAO,SAASU,oBAAT,CAA8BR,OAA9B,EAAuC;AAC1C,SAAO;AAAEC,IAAAA,IAAI,EAAEd,eAAR;AAAyBa,IAAAA;AAAzB,GAAP;AACH;AAED,OAAO,SAASS,aAAT,CAAuBF,EAAvB,EAA2B;AAC9B,SAAOhB,QAAQ,IAAI;AACfF,IAAAA,KAAK,CACAqB,MADL,WACe1B,OADf,uBACmCuB,EADnC,GAEKd,IAFL,CAEU,MAAMF,QAAQ,CAACoB,oBAAoB,CAACJ,EAAD,CAArB,CAFxB,EAGKV,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAHpB;AAIH,GALD;AAMH;;AAED,SAASa,oBAAT,CAA8BJ,EAA9B,EAAkC;AAC9B,SAAO;AAAEN,IAAAA,IAAI,EAAEb,eAAR;AAAyBmB,IAAAA;AAAzB,GAAP;AACH","sourcesContent":["import { API_URL } from '../api'\nimport {\n    GET_PRODUCTS,\n    CREATE_PRODUCT,\n    UPDATE_PRODUCTS,\n    DELETE_PRODUCTS\n} from './actionsTypes'\nimport axios from 'axios'\n\nexport function getProducts() {\n    return dispatch => {\n        axios\n            .get(`${API_URL}/products`)\n            .then(response => dispatch(getProductsSuccess(response.data)))\n            .catch(error => console.error('getAPIProducts failed:', error))\n    }\n}\n\nexport function getProductsSuccess(payload) {\n    return { type: GET_PRODUCTS, payload }\n}\n\nexport function createProduct(payload) {\n    return dispatch => {\n        axios\n            .post(`${API_URL}/products`, payload)\n            .then(() => dispatch(createProductSuccess(payload)))\n            .catch(error => console.error('createProduct failed:', error))\n    }\n}\n\nexport function createProductSuccess(payload) {\n    return { type: CREATE_PRODUCT, payload }\n}\n\nexport function updateProduct(payload) {\n    return dispatch => {\n        axios\n            .put(`${API_URL}/products/${payload.id}`, payload)\n            .then(() => dispatch(updateProductSuccess(payload)))\n            .catch(error => console.error('updateProduct failed:', error))\n    }\n}\n\nexport function updateProductSuccess(payload) {\n    return { type: UPDATE_PRODUCTS, payload }\n}\n\nexport function deleteProduct(id) {\n    return dispatch => {\n        axios\n            .delete(`${API_URL}/products/${id}`)\n            .then(() => dispatch(deleteProductSuccess(id)))\n            .catch(error => console.error('deleteProduct failed:', error))\n    }\n}\n\nfunction deleteProductSuccess(id) {\n    return { type: DELETE_PRODUCTS, id }\n}"]},"metadata":{},"sourceType":"module"}