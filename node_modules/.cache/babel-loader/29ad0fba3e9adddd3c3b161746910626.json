{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/Stories.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Story from \"./Story\";\nimport './Stories.css';\nimport StoryHeader from \"./StoryHeader\";\nimport { getReadableStories } from '../selectors/story';\nimport { STORY_ARCHIVE } from '../constants/actionTypes';\nconst COLUMNS = {\n  title: {\n    width: '40%',\n    label: 'Title'\n  },\n  author: {\n    width: '30%',\n    label: 'Author'\n  },\n  comments: {\n    width: '10%',\n    label: 'Commnets'\n  },\n  points: {\n    width: '10%',\n    label: 'Points'\n  },\n  archive: {\n    width: '10%'\n  }\n};\n\nconst Stories = props => {\n  const stories = props.stories,\n        onArchive = props.onArchive;\n  return React.createElement(\"div\", {\n    className: \"stories\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(StoryHeader, {\n    columns: COLUMNS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), stories.map(story => React.createElement(Story, {\n    key: story.objectID,\n    story: story,\n    columns: COLUMNS,\n    onArchive: onArchive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  stories: getReadableStories(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive: dispatch(STORY_ARCHIVE)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stories);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/Stories.js"],"names":["React","connect","Story","StoryHeader","getReadableStories","STORY_ARCHIVE","COLUMNS","title","width","label","author","comments","points","archive","Stories","props","stories","onArchive","map","story","objectID","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GADK;AAKZC,EAAAA,MAAM,EAAE;AACJF,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,KAAK,EAAE;AAFH,GALI;AASZE,EAAAA,QAAQ,EAAE;AACNH,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,KAAK,EAAE;AAFD,GATE;AAaZG,EAAAA,MAAM,EAAE;AACJJ,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAbI;AAiBZI,EAAAA,OAAO,EAAE;AACLL,IAAAA,KAAK,EAAE;AADF;AAjBG,CAAhB;;AAsBA,MAAMM,OAAO,GAAIC,KAAD,IAAW;AAAA,QACfC,OADe,GACQD,KADR,CACfC,OADe;AAAA,QACNC,SADM,GACQF,KADR,CACNE,SADM;AAEvB,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEX,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKU,OAAO,CAACE,GAAR,CAAYC,KAAK,IACd,oBAAC,KAAD;AACI,IAAA,GAAG,EAAEA,KAAK,CAACC,QADf;AAEI,IAAA,KAAK,EAAED,KAFX;AAGI,IAAA,OAAO,EAAEb,OAHb;AAII,IAAA,SAAS,EAAEW,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,CADJ;AAaH,CAfD;;AAiBA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,OAAO,EAAEZ,kBAAkB,CAACkB,KAAD;AADK,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCP,EAAAA,SAAS,EAAEO,QAAQ,CAACnB,aAAD;AADmB,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport Story from \"./Story\";\n\nimport './Stories.css';\nimport StoryHeader from \"./StoryHeader\";\nimport { getReadableStories } from '../selectors/story';\nimport { STORY_ARCHIVE } from '../constants/actionTypes';\n\nconst COLUMNS = {\n    title: {\n        width: '40%',\n        label: 'Title'\n    },\n    author: {\n        width: '30%',\n        label: 'Author'\n    },\n    comments: {\n        width: '10%',\n        label: 'Commnets'\n    },\n    points: {\n        width: '10%',\n        label: 'Points'\n    },\n    archive: {\n        width: '10%',\n    }\n};\n\nconst Stories = (props) => {\n    const { stories, onArchive } = props;\n    return (\n        <div className=\"stories\">\n            <StoryHeader columns={COLUMNS} />\n            {stories.map(story => (\n                <Story\n                    key={story.objectID}\n                    story={story}\n                    columns={COLUMNS}\n                    onArchive={onArchive}\n                />\n            ))}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    stories: getReadableStories(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onArchive: dispatch(STORY_ARCHIVE)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stories);"]},"metadata":{},"sourceType":"module"}