{"ast":null,"code":"import { API_URL } from '../api';\nimport { GET_PERMISSIONS, UPDATE_PERMISSIONS } from './actionTypes';\nimport axios from 'axios';\nexport function getPermissionsSuccess(permissions) {\n  return {\n    type: GET_PERMISSIONS,\n    payload: permissions[0].options\n  };\n}\nexport function getPermissions() {\n  return dispatch => {\n    axios.get(\"\".concat(API_URL, \"/permissions\")).then(response => {\n      dispatch(getPermissionsSuccess(response.data));\n    }).catch(error => {\n      console.error('getPermissions axios error', error);\n    });\n  };\n}\nexport function updatePermissions(payload) {\n  const permissions = [];\n  const id = 1;\n  Object.keys(payload).forEach(permission => {\n    if (payload[permission]) {\n      permissions.push(permission.toUpperCase());\n    }\n  });\n  const newPermissions = {\n    id,\n    options: permissions\n  };\n  return dispatch => {\n    axios.put(\"\".concat(API_URL, \"/permissions/\").concat(id), newPermissions).then(response => dispatch(updatePermissionsSuccess(response.data))).catch(error => console.error('updatePermissions axios error', error));\n  };\n}\nexport function updatePermissionsSuccess(permissions) {\n  return {\n    type: UPDATE_PERMISSIONS,\n    payload: permissions.options\n  };\n}","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/actions/permissionActions.js"],"names":["API_URL","GET_PERMISSIONS","UPDATE_PERMISSIONS","axios","getPermissionsSuccess","permissions","type","payload","options","getPermissions","dispatch","get","then","response","data","catch","error","console","updatePermissions","id","Object","keys","forEach","permission","push","toUpperCase","newPermissions","put","updatePermissionsSuccess"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,eAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,WAA/B,EAA4C;AACjD,SAAO;AAAEC,IAAAA,IAAI,EAAEL,eAAR;AAAyBM,IAAAA,OAAO,EAAEF,WAAW,CAAC,CAAD,CAAX,CAAeG;AAAjD,GAAP;AACD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAOC,QAAQ,IAAI;AACjBP,IAAAA,KAAK,CACFQ,GADH,WACUX,OADV,mBAEGY,IAFH,CAEQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACN,qBAAqB,CAACS,QAAQ,CAACC,IAAV,CAAtB,CAAR;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACD,KAPH;AAQD,GATD;AAUD;AAED,OAAO,SAASE,iBAAT,CAA2BX,OAA3B,EAAoC;AACzC,QAAMF,WAAW,GAAG,EAApB;AACA,QAAMc,EAAE,GAAG,CAAX;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYd,OAAZ,EAAqBe,OAArB,CAA6BC,UAAU,IAAI;AACzC,QAAIhB,OAAO,CAACgB,UAAD,CAAX,EAAyB;AACvBlB,MAAAA,WAAW,CAACmB,IAAZ,CAAiBD,UAAU,CAACE,WAAX,EAAjB;AACD;AACF,GAJD;AAMA,QAAMC,cAAc,GAAG;AACrBP,IAAAA,EADqB;AAErBX,IAAAA,OAAO,EAAEH;AAFY,GAAvB;AAKA,SAAOK,QAAQ,IAAI;AACjBP,IAAAA,KAAK,CACFwB,GADH,WACU3B,OADV,0BACiCmB,EADjC,GACuCO,cADvC,EAEGd,IAFH,CAEQC,QAAQ,IAAIH,QAAQ,CAACkB,wBAAwB,CAACf,QAAQ,CAACC,IAAV,CAAzB,CAF5B,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C,CAHlB;AAID,GALD;AAMD;AAED,OAAO,SAASY,wBAAT,CAAkCvB,WAAlC,EAA+C;AACpD,SAAO;AAAEC,IAAAA,IAAI,EAAEJ,kBAAR;AAA4BK,IAAAA,OAAO,EAAEF,WAAW,CAACG;AAAjD,GAAP;AACD","sourcesContent":["import { API_URL } from '../api'\nimport { GET_PERMISSIONS, UPDATE_PERMISSIONS } from './actionTypes'\nimport axios from 'axios'\n\nexport function getPermissionsSuccess(permissions) {\n  return { type: GET_PERMISSIONS, payload: permissions[0].options }\n}\n\nexport function getPermissions() {\n  return dispatch => {\n    axios\n      .get(`${API_URL}/permissions`)\n      .then(response => {\n        dispatch(getPermissionsSuccess(response.data))\n      })\n      .catch(error => {\n        console.error('getPermissions axios error', error)\n      })\n  }\n}\n\nexport function updatePermissions(payload) {\n  const permissions = []\n  const id = 1\n  Object.keys(payload).forEach(permission => {\n    if (payload[permission]) {\n      permissions.push(permission.toUpperCase())\n    }\n  })\n\n  const newPermissions = {\n    id,\n    options: permissions\n  }\n\n  return dispatch => {\n    axios\n      .put(`${API_URL}/permissions/${id}`, newPermissions)\n      .then(response => dispatch(updatePermissionsSuccess(response.data)))\n      .catch(error => console.error('updatePermissions axios error', error))\n  }\n}\n\nexport function updatePermissionsSuccess(permissions) {\n  return { type: UPDATE_PERMISSIONS, payload: permissions.options }\n}\n"]},"metadata":{},"sourceType":"module"}