{"ast":null,"code":"import _objectWithoutProperties from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/common/form.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCheckbox = ({\n      input,\n      label\n    }) => {\n      return React.createElement(Checkbox, {\n        label: label,\n        checked: input.value ? true : false,\n        onCheck: input.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    };\n\n    this.renderRadioGroup = (_ref) => {\n      let input = _ref.input,\n          rest = _objectWithoutProperties(_ref, [\"input\"]);\n\n      return React.createElement(RadioGroup, Object.assign({}, input, rest, {\n        valueSelected: input.value,\n        onChange: (event, value) => input.onChange(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    };\n\n    this.renderSelectField = (_ref2) => {\n      let input = _ref2.input,\n          label = _ref2.label,\n          _ref2$meta = _ref2.meta,\n          touched = _ref2$meta.touched,\n          error = _ref2$meta.error,\n          children = _ref2.children,\n          custom = _objectWithoutProperties(_ref2, [\"input\", \"label\", \"meta\", \"children\"]);\n\n      return React.createElement(Select, Object.assign({\n        floatingLabelText: label,\n        errorText: touched && error\n      }, input, {\n        onChange: (event, index, value) => input.onChange(value),\n        children: children\n      }, custom, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    };\n\n    this.renderTextField = (_ref3) => {\n      let input = _ref3.input,\n          label = _ref3.label,\n          _ref3$meta = _ref3.meta,\n          touched = _ref3$meta.touched,\n          error = _ref3$meta.error,\n          custom = _objectWithoutProperties(_ref3, [\"input\", \"label\", \"meta\"]);\n\n      return React.createElement(TextField, Object.assign({\n        hintText: label,\n        floatingLabelText: label,\n        errorText: touched && error\n      }, input, custom, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    };\n\n    this.inputRender = ({\n      input,\n      label,\n      name,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        label: label,\n        name: name,\n        onChange: input.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" \", error);\n    }\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/common/form.js"],"names":["React","Component","TextField","RadioGroup","Checkbox","Select","Form","renderCheckbox","input","label","value","onChange","renderRadioGroup","rest","event","renderSelectField","meta","touched","error","children","custom","index","renderTextField","inputRender","name","renderError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\n\nclass Form extends Component {\n   // check box \n   renderCheckbox = ({ input, label }) => {\n      return (\n         <Checkbox\n            label={label}\n            checked={input.value ? true : false}\n            onCheck={input.onChange}\n         />\n      )\n   }\n   // ratio\n   renderRadioGroup = ({ input, ...rest }) => {\n      return (\n         <RadioGroup\n            {...input}\n            {...rest}\n            valueSelected={input.value}\n            onChange={(event, value) => input.onChange(value)}\n         />\n      )\n   }\n   // select\n   renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => {\n      return (\n         <Select\n            floatingLabelText={label}\n            errorText={touched && error}\n            {...input}\n            onChange={(event, index, value) => input.onChange(value)}\n            children={children}\n            {...custom}\n         />\n      )\n   }\n\n   renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => {\n      return (\n         <TextField\n            hintText={label}\n            floatingLabelText={label}\n            errorText={touched && error}\n            {...input}\n            {...custom}\n         />\n      )\n   }\n\n   // input\n   inputRender = ({ input, label, name, meta }) => {\n      return (\n         <div className=\"form-group\">\n\n            <TextField\n               variant=\"outlined\"\n               required\n               fullWidth\n               label={label}\n               name={name}\n               onChange={input.onChange}\n            />\n\n            {this.renderError(meta)}\n         </div>\n      )\n   }\n\n   renderError({ error, touched }) {\n      if (touched && error) {\n         return (\n            <div> {error}</div>\n         );\n      }\n   }\n}\n\nexport default Form;\n\n"]},"metadata":{},"sourceType":"module"}