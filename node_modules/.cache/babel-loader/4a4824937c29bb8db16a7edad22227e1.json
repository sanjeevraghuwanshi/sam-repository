{"ast":null,"code":"import _defineProperty from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { doLogin } from '../../actions/userAction';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Login extends Form {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async (fromProps, dispatch) => {\n      // dispatch(reset('loginForm'));\n      // await this.props.doLogin(fromProps);\n      //this.props.history.push('/stream/new')\n      window.location = '/app/dashboard';\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          [name]: value\n        })\n      });\n    };\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"from-title\",\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(\"form\", {\n      className: \"formCustom\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"formControl\",\n      name: \"email\",\n      onChange: this.handleChange,\n      label: \"Please Enter Email\",\n      name: \"email\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Please Enter Password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/forgot-password\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Forgot password? \")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/register\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Don't have an account? Sign Up\"))));\n  }\n\n} // const validate = (fromValue) => {\n//     const schema = {\n//         email: Joi.string()\n//             .required()\n//             .label(\"Email\"),\n//         password: Joi.string()\n//             .required()\n//             .label(\"Password\")\n//     };\n//     const options = { abortEarly: false };\n//     const { error } = Joi.validate(fromValue, schema, options);\n//     if (!error) return null;\n//     const errors = {};\n//     for (let item of error.details) {\n//         errors[item.path[0]] = item.message;\n//     }\n//     return errors;\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     user:state.user\n//   };\n// }\n// const LoginMap = connect(mapStateToProps, { login })(Login)\n\n\nexport default reduxForm({\n  form: 'loginForm'\n})(Login);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","doLogin","Button","Grid","Container","Typography","Login","constructor","props","onSubmit","fromProps","dispatch","window","location","handleChange","e","target","name","value","setState","user","state","email","password","render","handleSubmit","inputRender","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { doLogin } from '../../actions/userAction';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Login extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    onSubmit = async (fromProps, dispatch) => {\n        // dispatch(reset('loginForm'));\n        // await this.props.doLogin(fromProps);\n        //this.props.history.push('/stream/new')\n        window.location = '/app/dashboard'\n    }\n    handleChange = e => {\n        const { name, value } = e.target\n        this.setState({ user: { ...this.state.user, [name]: value } });\n    }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Grid item xs={12} >\n\n                    <Typography className=\"from-title\" component=\"h1\" variant=\"h5\"> Sign in </Typography>\n\n                    <form className=\"formCustom\" onSubmit={this.props.handleSubmit(this.onSubmit)} noValidate>\n                        <Field className=\"formControl\" name=\"email\" onChange={this.handleChange} label=\"Please Enter Email\" name=\"email\" component={this.inputRender} />\n                        <Field label=\"Please Enter Password\" name=\"password\" onChange={this.handleChange} component={this.inputRender} />\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n                    </form>\n                </Grid>\n                <br></br>\n                <Grid container>\n                    <Grid item xs>\n                        <NavLink to=\"/forgot-password\" variant=\"body2\">Forgot password? </NavLink>\n                    </Grid>\n                    <Grid item>\n                        <NavLink to=\"/register\" variant=\"body2\"> Don't have an account? Sign Up</NavLink>\n                    </Grid>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\n// const validate = (fromValue) => {\n//     const schema = {\n//         email: Joi.string()\n//             .required()\n//             .label(\"Email\"),\n//         password: Joi.string()\n//             .required()\n//             .label(\"Password\")\n//     };\n\n//     const options = { abortEarly: false };\n//     const { error } = Joi.validate(fromValue, schema, options);\n//     if (!error) return null;\n\n//     const errors = {};\n//     for (let item of error.details) {\n//         errors[item.path[0]] = item.message;\n//     }\n//     return errors;\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     user:state.user\n//   };\n// }\n\n// const LoginMap = connect(mapStateToProps, { login })(Login)\n\n\nexport default reduxForm({\n    form: 'loginForm'\n})(Login);"]},"metadata":{},"sourceType":"module"}