{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Register.js\";\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux'; // import  { login } from '../../actions/user.actions';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Register extends Form {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = (fromProps, dispatch) => {\n      dispatch(reset('loginForm'));\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      className: \"from-title\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" Sign up \"), React.createElement(\"form\", {\n      className: \"formCustom\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter First Name\",\n      name: \"firstName\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter Last Name\",\n      name: \"lastName\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter Email\",\n      name: \"email\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Please Enter Password\",\n      name: \"password\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))));\n  }\n\n}\n\nconst validate = fromValue => {\n  const schema = {\n    firstName: Joi.string().required().label(\"First Name\"),\n    lastName: Joi.string().required().label(\"Last Name\"),\n    email: Joi.string().required().label(\"Email\"),\n    password: Joi.string().required().label(\"Password\")\n  };\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(fromValue, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(Register);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Register.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","Button","Grid","Container","Typography","Register","onSubmit","fromProps","dispatch","render","props","handleSubmit","inputRender","validate","fromValue","schema","firstName","string","required","label","lastName","email","password","options","abortEarly","error","errors","item","details","path","message","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\n// import  { login } from '../../actions/user.actions';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Register extends Form {\n  onSubmit = (fromProps, dispatch) => {\n    dispatch(reset('loginForm'));\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Grid item xs={12} >\n\n          <Typography component=\"h1\" className=\"from-title\" variant=\"h5\"> Sign up </Typography>\n          <form className=\"formCustom\" onSubmit={this.props.handleSubmit(this.onSubmit)} noValidate>\n            <Field className=\"formControl\" label=\"Please Enter First Name\" name=\"firstName\" component={this.inputRender} />\n            <Field className=\"formControl\" label=\"Please Enter Last Name\" name=\"lastName\" component={this.inputRender} />\n            <Field className=\"formControl\" label=\"Please Enter Email\" name=\"email\" component={this.inputRender} />\n            <Field label=\"Please Enter Password\" name=\"password\" component={this.inputRender} />\n\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n          </form>\n\n        </Grid>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <NavLink to=\"/auth/login\" >\n              Already have an account? Sign in\n              </NavLink>\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n}\n\nconst validate = (fromValue) => {\n  const schema = {\n    firstName: Joi.string()\n      .required()\n      .label(\"First Name\"),\n    lastName: Joi.string()\n      .required()\n      .label(\"Last Name\"),\n    email: Joi.string()\n      .required()\n      .label(\"Email\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  const options = { abortEarly: false };\n  const { error } = Joi.validate(fromValue, schema, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n  return errors;\n}\n\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(Register);"]},"metadata":{},"sourceType":"module"}