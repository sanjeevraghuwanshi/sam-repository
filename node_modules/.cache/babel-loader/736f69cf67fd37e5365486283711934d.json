{"ast":null,"code":"import { GET_PRODUCTS, CREATE_PRODUCTS, UPDATE_PRODUCTS, DELETE_PRODUCTS } from \"./actionsTypes\";\nimport axios from \"axios\";\nimport { API_URL } from \"../api\";\nexport function getProducts() {\n  return dispatch => {\n    axios.get(\"\".concat(API_URL, \"/products\")).then(response => dispatch(getProductsSuccess(response.data))).catch(error => console.error('getAPIProducts failed:', error));\n  };\n}\n;\n\nconst getProductsSuccess = payload => ({\n  type: GET_PRODUCTS,\n  payload\n});\n\nexport function createProduct(payload) {\n  return dispatch => {\n    axios.post(\"\".concat(API_URL, \"/products\"), payload).then(() => dispatch(createProductSuccess(payload))).catch(error => console.error('createProduct failed:', error));\n  };\n}\n;\n\nconst createProductSuccess = payload => ({\n  type: CREATE_PRODUCTS,\n  payload\n});\n\nexport function updateProduct(payload) {\n  return dispatch => {\n    axios.put(\"\".concat(API_URL, \"/products/\").concat(payload.id), payload).then(() => dispatch(updateProductSuccess(payload))).catch(error => console.error('updateProduct failed:', error));\n  };\n}\n;\n\nconst updateProductSuccess = payload => ({\n  type: UPDATE_PRODUCTS,\n  payload\n});\n\nexport function deleteProduct(id) {\n  return dispatch => {\n    axios.delete(\"\".concat(API_URL, \"/products/\").concat(id)).then(() => dispatch(deleteProductSuccess(id))).catch(error => console.error('deleteProduct failed:', error));\n  };\n}\n;\n\nconst deleteProductSuccess = id => ({\n  type: DELETE_PRODUCTS,\n  id\n});","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/actions/productActions.js"],"names":["GET_PRODUCTS","CREATE_PRODUCTS","UPDATE_PRODUCTS","DELETE_PRODUCTS","axios","API_URL","getProducts","dispatch","get","then","response","getProductsSuccess","data","catch","error","console","payload","type","createProduct","post","createProductSuccess","updateProduct","put","id","updateProductSuccess","deleteProduct","delete","deleteProductSuccess"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,eAAvB,EAAwCC,eAAxC,EAAyDC,eAAzD,QAAgF,gBAAhF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAGA,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAOC,QAAQ,IAAI;AACfH,IAAAA,KAAK,CAACI,GAAN,WAAaH,OAAb,gBACKI,IADL,CACUC,QAAQ,IAAIH,QAAQ,CAACI,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAD9B,EAEKC,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC,CAFpB;AAGH,GAJD;AAKH;AAAA;;AAED,MAAMH,kBAAkB,GAAIK,OAAD,KAAc;AACrCC,EAAAA,IAAI,EAAEjB,YAD+B;AAErCgB,EAAAA;AAFqC,CAAd,CAA3B;;AAKA,OAAO,SAASE,aAAT,CAAuBF,OAAvB,EAAgC;AACnC,SAAOT,QAAQ,IAAI;AACfH,IAAAA,KAAK,CAACe,IAAN,WAAcd,OAAd,gBAAkCW,OAAlC,EACKP,IADL,CACU,MAAMF,QAAQ,CAACa,oBAAoB,CAACJ,OAAD,CAArB,CADxB,EAEKH,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAFpB;AAGH,GAJD;AAKH;AAAA;;AAED,MAAMM,oBAAoB,GAAIJ,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEhB,eADiC;AAEvCe,EAAAA;AAFuC,CAAd,CAA7B;;AAKA,OAAO,SAASK,aAAT,CAAuBL,OAAvB,EAAgC;AACnC,SAAOT,QAAQ,IAAI;AACfH,IAAAA,KAAK,CAACkB,GAAN,WAAajB,OAAb,uBAAiCW,OAAO,CAACO,EAAzC,GAA+CP,OAA/C,EACKP,IADL,CACU,MAAMF,QAAQ,CAACiB,oBAAoB,CAACR,OAAD,CAArB,CADxB,EAEKH,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAFpB;AAGH,GAJD;AAKH;AAAA;;AAED,MAAMU,oBAAoB,GAAIR,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEf,eADiC;AAEvCc,EAAAA;AAFuC,CAAd,CAA7B;;AAMA,OAAO,SAASS,aAAT,CAAuBF,EAAvB,EAA2B;AAC9B,SAAOhB,QAAQ,IAAI;AACfH,IAAAA,KAAK,CAACsB,MAAN,WAAgBrB,OAAhB,uBAAoCkB,EAApC,GACKd,IADL,CACU,MAAMF,QAAQ,CAACoB,oBAAoB,CAACJ,EAAD,CAArB,CADxB,EAEKV,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAFpB;AAGH,GAJD;AAKH;AAAA;;AAED,MAAMa,oBAAoB,GAAIJ,EAAD,KAAS;AAClCN,EAAAA,IAAI,EAAEd,eAD4B;AAElCoB,EAAAA;AAFkC,CAAT,CAA7B","sourcesContent":["import { GET_PRODUCTS, CREATE_PRODUCTS, UPDATE_PRODUCTS, DELETE_PRODUCTS } from \"./actionsTypes\";\nimport axios from \"axios\";\nimport { API_URL } from \"../api\";\n\n\nexport function getProducts() {\n    return dispatch => {\n        axios.get(`${API_URL}/products`)\n            .then(response => dispatch(getProductsSuccess(response.data)))\n            .catch(error => console.error('getAPIProducts failed:', error))\n    }\n};\n\nconst getProductsSuccess = (payload) => ({\n    type: GET_PRODUCTS,\n    payload\n});\n\nexport function createProduct(payload) {\n    return dispatch => {\n        axios.post(`${API_URL}/products`, payload)\n            .then(() => dispatch(createProductSuccess(payload)))\n            .catch(error => console.error('createProduct failed:', error))\n    }\n};\n\nconst createProductSuccess = (payload) => ({\n    type: CREATE_PRODUCTS,\n    payload\n});\n\nexport function updateProduct(payload) {\n    return dispatch => {\n        axios.put(`${API_URL}/products/${payload.id}`, payload)\n            .then(() => dispatch(updateProductSuccess(payload)))\n            .catch(error => console.error('updateProduct failed:', error))\n    }\n};\n\nconst updateProductSuccess = (payload) => ({\n    type: UPDATE_PRODUCTS,\n    payload\n})\n\n\nexport function deleteProduct(id) {\n    return dispatch => {\n        axios.delete(`${API_URL}/products/${id}`)\n            .then(() => dispatch(deleteProductSuccess(id)))\n            .catch(error => console.error('deleteProduct failed:', error))\n    }\n};\n\nconst deleteProductSuccess = (id) => ({\n    type: DELETE_PRODUCTS,\n    id\n})\n\n\n\n"]},"metadata":{},"sourceType":"module"}