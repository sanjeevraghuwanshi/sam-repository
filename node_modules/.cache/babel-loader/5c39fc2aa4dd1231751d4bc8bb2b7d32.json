{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/containers/PermissionServiceContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hasCreatePermission, hasReadPermission, hasUpdatePermission, hasDeletePermission } from '../utils/hasPermission';\nimport PermissionService from '../components/PermissionService';\nimport { updatePermissions } from '../actions/permissionActions';\n\nclass PermissionServiceContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      create: false,\n      read: false,\n      update: false,\n      delete: false\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            checked = _event$target.checked;\n      this.setState({\n        [name]: checked\n      });\n      const newPermissions = Object.assign(this.state, {\n        [name]: checked\n      });\n      this.props.handleUpdatePermissions(newPermissions);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const permissions = nextProps.permissions;\n    this.setState({\n      create: hasCreatePermission(permissions),\n      read: hasReadPermission(permissions),\n      update: hasUpdatePermission(permissions),\n      delete: hasDeletePermission(permissions)\n    });\n  }\n\n  render() {\n    return React.createElement(PermissionService, {\n      handleChange: this.handleChange,\n      create: this.state.create,\n      read: this.state.read,\n      update: this.state.update,\n      delete: this.state.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    permissions: state.permissions\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleUpdatePermissions(payload) {\n    dispatch(updatePermissions(payload));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionServiceContainer);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/containers/PermissionServiceContainer.js"],"names":["React","Component","connect","hasCreatePermission","hasReadPermission","hasUpdatePermission","hasDeletePermission","PermissionService","updatePermissions","PermissionServiceContainer","state","create","read","update","delete","handleChange","event","target","name","checked","setState","newPermissions","Object","assign","props","handleUpdatePermissions","componentWillReceiveProps","nextProps","permissions","render","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,QAKO,wBALP;AAMA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,0BAAN,SAAyCR,SAAzC,CAAmD;AAAA;AAAA;AAAA,SAC/CS,KAD+C,GACvC;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,MAAM,EAAE;AAJJ,KADuC;;AAAA,SAQ/CC,YAR+C,GAQhCC,KAAK,IAAI;AAAA,4BACMA,KAAK,CAACC,MADZ;AAAA,YACZC,IADY,iBACZA,IADY;AAAA,YACNC,OADM,iBACNA,OADM;AAEpB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACA,YAAME,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKb,KAAnB,EAA0B;AAAE,SAACQ,IAAD,GAAQC;AAAV,OAA1B,CAAvB;AACA,WAAKK,KAAL,CAAWC,uBAAX,CAAmCJ,cAAnC;AACH,KAb8C;AAAA;;AAe/CK,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,UAAMC,WAAW,GAAGD,SAAS,CAACC,WAA9B;AACA,SAAKR,QAAL,CAAc;AACVT,MAAAA,MAAM,EAAER,mBAAmB,CAACyB,WAAD,CADjB;AAEVhB,MAAAA,IAAI,EAAER,iBAAiB,CAACwB,WAAD,CAFb;AAGVf,MAAAA,MAAM,EAAER,mBAAmB,CAACuB,WAAD,CAHjB;AAIVd,MAAAA,MAAM,EAAER,mBAAmB,CAACsB,WAAD;AAJjB,KAAd;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,iBAAD;AACI,MAAA,YAAY,EAAE,KAAKd,YADvB;AAEI,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,MAFvB;AAGI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAHrB;AAII,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MAJvB;AAKI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAnC8C;;AAsCnD,MAAMgB,eAAe,GAAGpB,KAAK,IAAI;AAC7B,SAAO;AAAEkB,IAAAA,WAAW,EAAElB,KAAK,CAACkB;AAArB,GAAP;AACH,CAFD;;AAIA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,uBAAuB,CAACQ,OAAD,EAAU;AAC7BD,IAAAA,QAAQ,CAACxB,iBAAiB,CAACyB,OAAD,CAAlB,CAAR;AACH;;AAHmC,CAAL,CAAnC;;AAMA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CACXtB,0BADW,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    hasCreatePermission,\n    hasReadPermission,\n    hasUpdatePermission,\n    hasDeletePermission\n} from '../utils/hasPermission'\nimport PermissionService from '../components/PermissionService'\nimport { updatePermissions } from '../actions/permissionActions'\n\nclass PermissionServiceContainer extends Component {\n    state = {\n        create: false,\n        read: false,\n        update: false,\n        delete: false\n    }\n\n    handleChange = event => {\n        const { name, checked } = event.target\n        this.setState({ [name]: checked })\n        const newPermissions = Object.assign(this.state, { [name]: checked })\n        this.props.handleUpdatePermissions(newPermissions)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const permissions = nextProps.permissions\n        this.setState({\n            create: hasCreatePermission(permissions),\n            read: hasReadPermission(permissions),\n            update: hasUpdatePermission(permissions),\n            delete: hasDeletePermission(permissions)\n        })\n    }\n\n    render() {\n        return (\n            <PermissionService\n                handleChange={this.handleChange}\n                create={this.state.create}\n                read={this.state.read}\n                update={this.state.update}\n                delete={this.state.delete}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { permissions: state.permissions }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    handleUpdatePermissions(payload) {\n        dispatch(updatePermissions(payload))\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    PermissionServiceContainer\n)"]},"metadata":{},"sourceType":"module"}