{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js\";\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Login extends Form {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = async (fromProps, dispatch) => {\n      // dispatch(reset('loginForm'));\n      await this.props.login(fromProps); //this.props.history.push('/stream/new')\n\n      window.location = '/app/dashboard';\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"from-title\",\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(\"form\", {\n      className: \"formCustom\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter Email\",\n      name: \"email\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Please Enter Password\",\n      name: \"password\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/forgot-password\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Forgot password? \")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/register\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" Don't have an account? Sign Up\"))));\n  }\n\n}\n\nconst validate = fromValue => {\n  const schema = {\n    email: Joi.string().required().label(\"Email\"),\n    password: Joi.string().required().label(\"Password\")\n  };\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(fromValue, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst LoginMap = connect(mapStateToProps, {})(Login);\nexport default reduxForm({\n  form: 'loginForm',\n  validate: validate\n})(LoginMap);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","connect","Button","Grid","Container","Typography","Login","Form","onSubmit","fromProps","dispatch","props","login","window","location","render","handleSubmit","inputRender","validate","fromValue","schema","email","string","required","label","password","options","abortEarly","error","errors","item","details","path","message","mapStateToProps","state","user","LoginMap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Login extends Form {\n    onSubmit = async (fromProps, dispatch) => {\n        // dispatch(reset('loginForm'));\n        await this.props.login(fromProps);\n        //this.props.history.push('/stream/new')\n        window.location = '/app/dashboard'\n    }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Grid item xs={12} >\n\n                    <Typography className=\"from-title\" component=\"h1\" variant=\"h5\"> Sign in </Typography>\n\n                    <form className=\"formCustom\" onSubmit={this.props.handleSubmit(this.onSubmit)} noValidate>\n                        <Field className=\"formControl\" label=\"Please Enter Email\" name=\"email\" component={this.inputRender} />\n                        <Field label=\"Please Enter Password\" name=\"password\" component={this.inputRender} />\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n                    </form>\n                </Grid>\n                <br></br>\n                <Grid container>\n                    <Grid item xs>\n                        <NavLink to=\"/forgot-password\" variant=\"body2\">Forgot password? </NavLink>\n                    </Grid>\n                    <Grid item>\n                        <NavLink to=\"/register\" variant=\"body2\"> Don't have an account? Sign Up</NavLink>\n                    </Grid>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nconst validate = (fromValue) => {\n    const schema = {\n        email: Joi.string()\n            .required()\n            .label(\"Email\"),\n        password: Joi.string()\n            .required()\n            .label(\"Password\")\n    };\n\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(fromValue, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n        errors[item.path[0]] = item.message;\n    }\n    return errors;\n}\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    };\n}\n\nconst LoginMap = connect(mapStateToProps, {})(Login)\n\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate: validate\n})(LoginMap);"]},"metadata":{},"sourceType":"module"}