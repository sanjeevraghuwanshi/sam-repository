{"ast":null,"code":"import _defineProperty from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userConstants } from \"../constants/user.constants\";\nimport { SIGN_IN } from \"../constants/actionTypes\";\nlet user = localStorage.getItem('user');\nconst initialState = user ? {\n  loggedIn: true,\n  user\n} : {};\nexport default ((state = initialState, {\n  type,\n  userFetchedData,\n  userData,\n  registerUser\n}) => {\n  switch (type) {\n    case SIGN_IN:\n      return _objectSpread({}, state, {\n        userData\n      });\n\n    case userConstants.LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        userFetchedData\n      });\n\n    case userConstants.REGISTER_REQUEST:\n      return _objectSpread({}, state, {\n        registerUser\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/reducers/loginReducer.js"],"names":["userConstants","SIGN_IN","user","localStorage","getItem","initialState","loggedIn","state","type","userFetchedData","userData","registerUser","LOGIN_SUCCESS","REGISTER_REQUEST"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAEA,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACA,MAAMC,YAAY,GAAGH,IAAI,GAAG;AAAEI,EAAAA,QAAQ,EAAE,IAAZ;AAAkBJ,EAAAA;AAAlB,CAAH,GAA8B,EAAvD;AAEA,gBAAe,CAACK,KAAK,GAAGF,YAAT,EAAuB;AAAEG,EAAAA,IAAF;AAAQC,EAAAA,eAAR;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,CAAvB,KAA6E;AACxF,UAAQH,IAAR;AACI,SAAKP,OAAL;AACI,+BAAYM,KAAZ;AAAmBG,QAAAA;AAAnB;;AACJ,SAAKV,aAAa,CAACY,aAAnB;AACI,+BAAYL,KAAZ;AAAmBE,QAAAA;AAAnB;;AACJ,SAAKT,aAAa,CAACa,gBAAnB;AACI,+BAAYN,KAAZ;AAAmBI,QAAAA;AAAnB;;AACJ;AACI,aAAOJ,KAAP;AARR;AAUH,CAXD","sourcesContent":["import { userConstants } from \"../constants/user.constants\";\nimport { SIGN_IN } from \"../constants/actionTypes\";\n\nlet user = localStorage.getItem('user');\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport default (state = initialState, { type, userFetchedData, userData, registerUser }) => {\n    switch (type) {\n        case SIGN_IN:\n            return { ...state, userData }\n        case userConstants.LOGIN_SUCCESS:\n            return { ...state, userFetchedData }\n        case userConstants.REGISTER_REQUEST:\n            return { ...state, registerUser }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}