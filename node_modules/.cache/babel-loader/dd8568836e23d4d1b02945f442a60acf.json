{"ast":null,"code":"import _defineProperty from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { doLogin } from \"../../actions/userAction\"; // import Button from '@material-ui/core/Button';\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"../Button\";\n\nclass Login extends Form {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"submit\", this.state);\n      const user = this.state.user;\n\n      if (user) {\n        this.props.onFetchLoginData(user); // this.setState({\n        //     user: {\n        //         email: '',\n        //         password: ''\n        //     }\n        // });\n      }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          [name]: value\n        })\n      });\n    };\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.user.email || '',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: this.state.user.password || '',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchLoginData: user => dispatch(doLogin(user))\n}); // const LoginMap = connect(null, mapDispatchToProps)(Login)\n\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","doLogin","Grid","Container","Typography","Button","Login","constructor","props","handleSubmit","e","preventDefault","console","log","state","user","onFetchLoginData","handleChange","target","name","value","setState","email","password","render","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,0BAAxB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAN,SAAoBP,IAApB,CAAyB;AACrBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,YAVmB,GAUJC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAA3B;AAFgB,YAIRC,IAJQ,GAIC,KAAKD,KAJN,CAIRC,IAJQ;;AAKhB,UAAIA,IAAJ,EAAU;AACN,aAAKP,KAAL,CAAWQ,gBAAX,CAA4BD,IAA5B,EADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACH;AAEJ,KAzBkB;;AAAA,SA0BnBE,YA1BmB,GA0BJP,CAAC,IAAI;AAAA,wBACQA,CAAC,CAACQ,MADV;AAAA,YACRC,IADQ,aACRA,IADQ;AAAA,YACFC,KADE,aACFA,KADE;AAEhB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,oBAAO,KAAKD,KAAL,CAAWC,IAAlB;AAAwB,WAACI,IAAD,GAAQC;AAAhC;AAAN,OAAd;AACH,KA7BkB;;AAEf,SAAKN,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AACFO,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,QAAQ,EAAE;AAFR;AADG,KAAb;AAMH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,IAAX,CAAgBO,KAAhB,IAAyB,EAHpC;AAII,MAAA,QAAQ,EAAE,KAAKL,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBQ,QAAhB,IAA4B,EAHvC;AAII,MAAA,QAAQ,EAAE,KAAKN,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAcI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,CADJ;AAkBH;;AApDoB;;AAwDzB,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,gBAAgB,EAAED,IAAI,IAAIW,QAAQ,CAACzB,OAAO,CAACc,IAAD,CAAR;AADE,CAAL,CAAnC,C,CAKA;;;AAGA,eAAef,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCnB,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { doLogin } from \"../../actions/userAction\";\n\n// import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"../Button\";\n\nclass Login extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(\"submit\", this.state)\n\n        const { user } = this.state;\n        if (user) {\n            this.props.onFetchLoginData(user);\n            // this.setState({\n            //     user: {\n            //         email: '',\n            //         password: ''\n            //     }\n            // });\n        }\n\n    }\n    handleChange = e => {\n        const { name, value } = e.target\n        this.setState({ user: { ...this.state.user, [name]: value } });\n    }\n\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"email\"\n                    value={this.state.user.email || ''}\n                    onChange={this.handleChange}\n                />\n                <input\n                    type=\"text\"\n                    name=\"password\"\n                    value={this.state.user.password || ''}\n                    onChange={this.handleChange}\n                />\n\n                <Button type=\"submit\">Search</Button>\n            </form>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    onFetchLoginData: user => dispatch(doLogin(user))\n})\n\n\n// const LoginMap = connect(null, mapDispatchToProps)(Login)\n\n\nexport default connect(null, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}