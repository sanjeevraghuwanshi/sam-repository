{"ast":null,"code":"import _defineProperty from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux'; // import  { login } from '../../actions/user.actions';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Register extends Form {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // dispatch(reset('loginForm'));\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          [name]: value\n        })\n      });\n    };\n\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      className: \"from-title\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Sign up \"), React.createElement(\"form\", {\n      className: \"formCustom\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter First Name\",\n      name: \"firstName\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter Last Name\",\n      name: \"lastName\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"formControl\",\n      label: \"Please Enter Email\",\n      name: \"email\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Please Enter Password\",\n      name: \"password\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))));\n  }\n\n}\n\nconst validate = fromValue => {\n  const schema = {\n    firstName: Joi.string().required().label(\"First Name\"),\n    lastName: Joi.string().required().label(\"Last Name\"),\n    email: Joi.string().required().label(\"Email\"),\n    password: Joi.string().required().label(\"Password\")\n  };\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(fromValue, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(Register);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Register.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","Button","Grid","Container","Typography","Register","constructor","props","handleSubmit","e","preventDefault","handleChange","target","name","value","setState","user","state","firstName","lastName","email","password","render","inputRender","validate","fromValue","schema","string","required","label","options","abortEarly","error","errors","item","details","path","message","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\n// import  { login } from '../../actions/user.actions';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nclass Register extends Form {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    }\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // dispatch(reset('loginForm'));\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      user: { ...this.state.user, [name]: value }\n    })\n  }\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Grid item xs={12} >\n\n          <Typography component=\"h1\" className=\"from-title\" variant=\"h5\"> Sign up </Typography>\n          <form className=\"formCustom\" onSubmit={this.handleSubmit} noValidate>\n            <Field className=\"formControl\" label=\"Please Enter First Name\" name=\"firstName\" component={this.inputRender} />\n            <Field className=\"formControl\" label=\"Please Enter Last Name\" name=\"lastName\" component={this.inputRender} />\n            <Field className=\"formControl\" label=\"Please Enter Email\" name=\"email\" component={this.inputRender} />\n            <Field label=\"Please Enter Password\" name=\"password\" component={this.inputRender} />\n\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n          </form>\n\n        </Grid>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <NavLink to=\"/auth/login\" >\n              Already have an account? Sign in\n              </NavLink>\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n}\n\nconst validate = (fromValue) => {\n  const schema = {\n    firstName: Joi.string()\n      .required()\n      .label(\"First Name\"),\n    lastName: Joi.string()\n      .required()\n      .label(\"Last Name\"),\n    email: Joi.string()\n      .required()\n      .label(\"Email\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  const options = { abortEarly: false };\n  const { error } = Joi.validate(fromValue, schema, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n  return errors;\n}\n\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(Register);"]},"metadata":{},"sourceType":"module"}