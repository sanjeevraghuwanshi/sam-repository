{"ast":null,"code":"import _defineProperty from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { doLogin } from '../../actions/userAction';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserExists } from \"../../selectors/loginSelectors\";\n\nclass Login extends Form {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const user = this.state.user;\n\n      if (user.email) {\n        this.props.onFetchLoginData(user);\n        this.setState({\n          user: {\n            email: '',\n            password: ''\n          }\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          [name]: value\n        })\n      });\n    };\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"from-title\",\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(\"form\", {\n      className: \"formCustom\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"formControl\",\n      onChange: this.handleChange,\n      label: \"Please Enter Email\",\n      name: \"email\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Please Enter Password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/forgot-password\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Forgot password? \")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/auth/signup\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Don't have an account? Sign Up\"))));\n  }\n\n}\n\nconst validate = fromValue => {\n  const schema = {\n    email: Joi.string().required().label(\"email\"),\n    password: Joi.string().required().label(\"password\")\n  };\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(fromValue, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n\n  return errors;\n}; // const LoginMap = connect(mapStateToProps, { login })(Login)\n\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchLoginData: user => dispatch(doLogin(user))\n});\n\nconst mapStateToProps = state => ({\n  isAuthorise: isUserExists(state)\n});\n\nconst LoginMap = connect(mapStateToProps, mapDispatchToProps)(Login);\nexport default reduxForm({\n  form: 'loginForm',\n  validate: validate\n})(LoginMap);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Login.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","doLogin","Button","Grid","Container","Typography","isUserExists","Login","constructor","props","handleSubmit","e","preventDefault","user","state","email","onFetchLoginData","setState","password","handleChange","target","name","value","render","inputRender","validate","fromValue","schema","string","required","label","options","abortEarly","error","errors","item","details","path","message","mapDispatchToProps","dispatch","mapStateToProps","isAuthorise","LoginMap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport { doLogin } from '../../actions/userAction';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport { isUserExists } from \"../../selectors/loginSelectors\";\n\nclass Login extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { user } = this.state;\n        if (user.email) {\n            this.props.onFetchLoginData(user);\n            this.setState({\n                user: {\n                    email: '',\n                    password: ''\n                }\n            });\n        }\n\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target\n        this.setState({ user: { ...this.state.user, [name]: value } });\n    }\n\n    render() {\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Grid item xs={12} >\n\n                    <Typography className=\"from-title\" component=\"h1\" variant=\"h5\"> Sign in </Typography>\n\n                    <form className=\"formCustom\" onSubmit={this.handleSubmit} noValidate>\n                        <Field className=\"formControl\" onChange={this.handleChange} label=\"Please Enter Email\" name=\"email\" component={this.inputRender} />\n                        <Field label=\"Please Enter Password\" name=\"password\" onChange={this.handleChange} component={this.inputRender} />\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n                    </form>\n                </Grid>\n                <br></br>\n                <Grid container>\n                    <Grid item xs>\n                        <NavLink to=\"/forgot-password\" variant=\"body2\">Forgot password? </NavLink>\n                    </Grid>\n                    <Grid item>\n                        <NavLink to=\"/auth/signup\" variant=\"body2\"> Don't have an account? Sign Up</NavLink>\n                    </Grid>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nconst validate = (fromValue) => {\n    const schema = {\n        email: Joi.string()\n            .required()\n            .label(\"email\"),\n        password: Joi.string()\n            .required()\n            .label(\"password\")\n    };\n\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(fromValue, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n        errors[item.path[0]] = item.message;\n    }\n    return errors;\n}\n\n// const LoginMap = connect(mapStateToProps, { login })(Login)\n\nconst mapDispatchToProps = dispatch => ({\n    onFetchLoginData: user => dispatch(doLogin(user))\n})\n\nconst mapStateToProps = (state) => ({\n    isAuthorise: isUserExists(state),\n});\n\nconst LoginMap = connect(mapStateToProps, mapDispatchToProps)(Login)\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate: validate\n})(LoginMap);"]},"metadata":{},"sourceType":"module"}