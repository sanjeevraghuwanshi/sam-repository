{"ast":null,"code":"import _defineProperty from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\nimport { NavLink } from 'react-router-dom';\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { doRegister } from '../../actions/userAction';\nimport { isUserRegistered } from '../../selectors/registerUserSelecter';\nimport { Redirect } from \"react-router-dom\";\n\nclass Register extends Form {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const user = this.state.user;\n\n      if (user.email) {\n        await this.props.onRegisterUser(user);\n        console.log(\"user registered\");\n      }\n\n      this.props.dispatch(reset('loginForm'));\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          [name]: value\n        })\n      });\n    };\n\n    console.log(\"life cycle\", 1);\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  static getDerivedStateFromProps() {\n    console.log(\"life cycle\", 2);\n    return null;\n  }\n\n  componentDidMount() {\n    console.log(\"life cycle\", 3);\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"life cycle\", 4);\n    return null;\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"life cycle\", 5);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"life cycle\", 6);\n  }\n\n  componentWillUnmount() {\n    console.log(\"life cycle\", 7);\n  }\n\n  static getDerivedStateFromError() {\n    console.log(\"life cycle\", 8);\n    return null;\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"life cycle\", 9);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      className: \"from-title\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Sign up \"), React.createElement(\"form\", {\n      className: \"formCustom\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Field, {\n      className: \"formControl\",\n      onChange: this.handleChange,\n      label: \"Please Enter First Name\",\n      name: \"firstName\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"formControl\",\n      onChange: this.handleChange,\n      label: \"Please Enter Last Name\",\n      name: \"lastName\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Field, {\n      className: \"formControl\",\n      onChange: this.handleChange,\n      label: \"Please Enter Email\",\n      name: \"email\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Please Enter Password\",\n      onChange: this.handleChange,\n      name: \"password\",\n      component: this.inputRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))), \"if (this.props.onRegisterUserSuccess; return ( === true) \", React.createElement(Redirect, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst validate = fromValue => {\n  const schema = {\n    firstName: Joi.string().required().label(\"First Name\"),\n    lastName: Joi.string().required().label(\"Last Name\"),\n    email: Joi.string().required().label(\"Email\"),\n    password: Joi.string().required().label(\"Password\")\n  };\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(fromValue, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  onRegisterUserSuccess: isUserRegistered(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRegisterUser: user => dispatch(doRegister(user))\n});\n\nconst RegisterMap = connect(mapStateToProps, mapDispatchToProps)(Register);\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(RegisterMap);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/auth/Register.js"],"names":["React","Field","reduxForm","reset","Joi","NavLink","Form","connect","Button","Grid","Container","Typography","doRegister","isUserRegistered","Redirect","Register","constructor","props","handleSubmit","e","preventDefault","user","state","email","onRegisterUser","console","log","dispatch","handleChange","target","name","value","setState","firstName","lastName","password","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","snapshot","componentWillUnmount","getDerivedStateFromError","componentDidCatch","error","info","render","inputRender","validate","fromValue","schema","string","required","label","options","abortEarly","errors","item","details","path","message","mapStateToProps","onRegisterUserSuccess","mapDispatchToProps","RegisterMap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport Joi from \"joi-browser\";\n\nimport { NavLink } from 'react-router-dom';\n\nimport Form from '../common/form';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { doRegister } from '../../actions/userAction';\nimport { isUserRegistered } from '../../selectors/registerUserSelecter';\n\nimport { Redirect } from \"react-router-dom\";\n\n\nclass Register extends Form {\n  constructor(props) {\n    super(props);\n    console.log(\"life cycle\", 1)\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    }\n  }\n\n  static getDerivedStateFromProps() {\n    console.log(\"life cycle\", 2)\n    return null;\n  };\n\n  componentDidMount() {\n    console.log(\"life cycle\", 3)\n  }\n\n  shouldComponentUpdate() {\n    console.log(\"life cycle\", 4)\n    return null\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log(\"life cycle\", 5)\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"life cycle\", 6)\n  }\n\n  componentWillUnmount() {\n    console.log(\"life cycle\", 7)\n  }\n\n  static getDerivedStateFromError() {\n    console.log(\"life cycle\", 8)\n    return null;\n  }\n\n  componentDidCatch(error, info) {\n    console.log(\"life cycle\", 9)\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { user } = this.state;\n    if (user.email) {\n      await this.props.onRegisterUser(user)\n      console.log(\"user registered\");\n    }\n\n    this.props.dispatch(reset('loginForm'));\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      user: { ...this.state.user, [name]: value }\n    })\n  }\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Grid item xs={12} >\n\n          <Typography component=\"h1\" className=\"from-title\" variant=\"h5\"> Sign up </Typography>\n          <form className=\"formCustom\" onSubmit={this.handleSubmit} noValidate>\n            <Field className=\"formControl\" onChange={this.handleChange} label=\"Please Enter First Name\" name=\"firstName\" component={this.inputRender} />\n            <Field className=\"formControl\" onChange={this.handleChange} label=\"Please Enter Last Name\" name=\"lastName\" component={this.inputRender} />\n            <Field className=\"formControl\" onChange={this.handleChange} label=\"Please Enter Email\" name=\"email\" component={this.inputRender} />\n            <Field label=\"Please Enter Password\" onChange={this.handleChange} name=\"password\" component={this.inputRender} />\n\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n          </form>\n\n        </Grid>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <NavLink to=\"/auth/login\" >\n              Already have an account? Sign in\n              </NavLink>\n          </Grid>\n        </Grid>\n        if (this.props.onRegisterUserSuccess;\n    return ( === true) {\n          <Redirect to=\"/auth/login\" />\n        }\n      </Container>\n    )\n  }\n}\n\n\n\nconst validate = (fromValue) => {\n  const schema = {\n    firstName: Joi.string()\n      .required()\n      .label(\"First Name\"),\n    lastName: Joi.string()\n      .required()\n      .label(\"Last Name\"),\n    email: Joi.string()\n      .required()\n      .label(\"Email\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  const options = { abortEarly: false };\n  const { error } = Joi.validate(fromValue, schema, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) {\n    errors[item.path[0]] = item.message;\n  }\n  return errors;\n}\n\nconst mapStateToProps = state => ({\n  onRegisterUserSuccess: isUserRegistered(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRegisterUser: user => dispatch(doRegister(user))\n});\n\nconst RegisterMap = connect(mapStateToProps, mapDispatchToProps)(Register)\n\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(RegisterMap);"]},"metadata":{},"sourceType":"module"}