{"ast":null,"code":"const isNotArchived = archivedIds => story => archivedIds.indexOf(story.objectID) === -1;\n\nconst isUserExists = state => {\n  return console.log(state);\n};\n\nconst getFetchError = ({\n  storyState\n}) => {\n  return storyState.error;\n};\n\nexport { isUserExists, getFetchError };","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/selectors/loginSelectors.js"],"names":["isNotArchived","archivedIds","story","indexOf","objectID","isUserExists","state","console","log","getFetchError","storyState","error"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,WAAW,IAAIC,KAAK,IAAID,WAAW,CAACE,OAAZ,CAAoBD,KAAK,CAACE,QAA1B,MAAwC,CAAC,CAAvF;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,SACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADJ;AAGH,CAJD;;AAMA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACtC,SACIA,UAAU,CAACC,KADf;AAGH,CAJD;;AAMA,SAASN,YAAT,EAAuBI,aAAvB","sourcesContent":["const isNotArchived = archivedIds => story => archivedIds.indexOf(story.objectID) === -1;\n\nconst isUserExists = (state) => {\n    return (\n        console.log(state)\n    );\n}\n\nconst getFetchError = ({ storyState }) => {\n    return (\n        storyState.error\n    );\n}\n\nexport { isUserExists, getFetchError }"]},"metadata":{},"sourceType":"module"}