{"ast":null,"code":"const isNotArchived = archivedIds => story => archivedIds.indexOf(story.objectID) === -1;\n\nconst getReadableStories = ({\n  storyState,\n  archiveState\n}) => {\n  return storyState.filter(isNotArchived(archiveState));\n};\n\nexport { getReadableStories };","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/selectors/story.js"],"names":["isNotArchived","archivedIds","story","indexOf","objectID","getReadableStories","storyState","archiveState","filter"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,WAAW,IAAIC,KAAK,IAAID,WAAW,CAACE,OAAZ,CAAoBD,KAAK,CAACE,QAA1B,MAAwC,CAAC,CAAvF;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AACzD,SACID,UAAU,CAACE,MAAX,CAAkBR,aAAa,CAACO,YAAD,CAA/B,CADJ;AAGH,CAJD;;AAMA,SAASF,kBAAT","sourcesContent":["const isNotArchived = archivedIds => story => archivedIds.indexOf(story.objectID) === -1;\n\nconst getReadableStories = ({ storyState, archiveState }) => {\n    return (\n        storyState.filter(isNotArchived(archiveState))\n    );\n}\n\nexport { getReadableStories }"]},"metadata":{},"sourceType":"module"}