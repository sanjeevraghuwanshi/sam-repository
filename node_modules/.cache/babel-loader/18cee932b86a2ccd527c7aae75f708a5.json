{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/containers/PermissionServiceContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hasCreatePermission, hasReadPermission, hasUpdatePermission, hasDeletePermission } from '../utils/hasPermission';\nimport PermissionService from '../components/PermissionService';\nimport { updatePermissions } from '../actions/permissionActions';\n\nclass PermissionServiceContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      create: false,\n      read: false,\n      update: false,\n      delete: false\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            checked = _event$target.checked;\n      this.setState({\n        [name]: checked\n      });\n      const newPermissions = Object.assign(this.state, {\n        [name]: checked\n      });\n      this.props.handleUpdatePermissions(newPermissions);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const permissions = nextProps.permissions;\n    this.setState({\n      create: hasCreatePermission(permissions),\n      read: hasReadPermission(permissions),\n      update: hasUpdatePermission(permissions),\n      delete: hasDeletePermission(permissions)\n    });\n  }\n\n  render() {\n    return React.createElement(PermissionService, {\n      handleChange: this.handleChange,\n      create: this.state.create,\n      read: this.state.read,\n      update: this.state.update,\n      delete: this.state.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    permissions: state.permissions\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleUpdatePermissions(payload) {\n    dispatch(updatePermissions(payload));\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionServiceContainer);","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/containers/PermissionServiceContainer.js"],"names":["React","Component","connect","hasCreatePermission","hasReadPermission","hasUpdatePermission","hasDeletePermission","PermissionService","updatePermissions","PermissionServiceContainer","state","create","read","update","delete","handleChange","event","target","name","checked","setState","newPermissions","Object","assign","props","handleUpdatePermissions","componentWillReceiveProps","nextProps","permissions","render","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,mBAJF,QAKO,wBALP;AAMA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,0BAAN,SAAyCR,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDS,KADiD,GACzC;AACNC,MAAAA,MAAM,EAAE,KADF;AAENC,MAAAA,IAAI,EAAE,KAFA;AAGNC,MAAAA,MAAM,EAAE,KAHF;AAINC,MAAAA,MAAM,EAAE;AAJF,KADyC;;AAAA,SAQjDC,YARiD,GAQlCC,KAAK,IAAI;AAAA,4BACIA,KAAK,CAACC,MADV;AAAA,YACdC,IADc,iBACdA,IADc;AAAA,YACRC,OADQ,iBACRA,OADQ;AAEtB,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACA,YAAME,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKb,KAAnB,EAA0B;AAAE,SAACQ,IAAD,GAAQC;AAAV,OAA1B,CAAvB;AACA,WAAKK,KAAL,CAAWC,uBAAX,CAAmCJ,cAAnC;AACD,KAbgD;AAAA;;AAejDK,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,UAAMC,WAAW,GAAGD,SAAS,CAACC,WAA9B;AACA,SAAKR,QAAL,CAAc;AACZT,MAAAA,MAAM,EAAER,mBAAmB,CAACyB,WAAD,CADf;AAEZhB,MAAAA,IAAI,EAAER,iBAAiB,CAACwB,WAAD,CAFX;AAGZf,MAAAA,MAAM,EAAER,mBAAmB,CAACuB,WAAD,CAHf;AAIZd,MAAAA,MAAM,EAAER,mBAAmB,CAACsB,WAAD;AAJf,KAAd;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,iBAAD;AACE,MAAA,YAAY,EAAE,KAAKd,YADrB;AAEE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,MAFrB;AAGE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAHnB;AAIE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MAJrB;AAKE,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAnCgD;;AAsCnD,MAAMgB,eAAe,GAAGpB,KAAK,IAAI;AAC/B,SAAO;AAAEkB,IAAAA,WAAW,EAAElB,KAAK,CAACkB;AAArB,GAAP;AACD,CAFD;;AAIA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,uBAAuB,CAACQ,OAAD,EAAU;AAC/BD,IAAAA,QAAQ,CAACxB,iBAAiB,CAACyB,OAAD,CAAlB,CAAR;AACD;;AAHqC,CAAL,CAAnC;;AAMA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CACbtB,0BADa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  hasCreatePermission,\n  hasReadPermission,\n  hasUpdatePermission,\n  hasDeletePermission\n} from '../utils/hasPermission'\nimport PermissionService from '../components/PermissionService'\nimport { updatePermissions } from '../actions/permissionActions'\n\nclass PermissionServiceContainer extends Component {\n  state = {\n    create: false,\n    read: false,\n    update: false,\n    delete: false\n  }\n\n  handleChange = event => {\n    const { name, checked } = event.target\n    this.setState({ [name]: checked })\n    const newPermissions = Object.assign(this.state, { [name]: checked })\n    this.props.handleUpdatePermissions(newPermissions)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const permissions = nextProps.permissions\n    this.setState({\n      create: hasCreatePermission(permissions),\n      read: hasReadPermission(permissions),\n      update: hasUpdatePermission(permissions),\n      delete: hasDeletePermission(permissions)\n    })\n  }\n\n  render() {\n    return (\n      <PermissionService\n        handleChange={this.handleChange}\n        create={this.state.create}\n        read={this.state.read}\n        update={this.state.update}\n        delete={this.state.delete}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { permissions: state.permissions }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleUpdatePermissions(payload) {\n    dispatch(updatePermissions(payload))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  PermissionServiceContainer\n)\n"]},"metadata":{},"sourceType":"module"}