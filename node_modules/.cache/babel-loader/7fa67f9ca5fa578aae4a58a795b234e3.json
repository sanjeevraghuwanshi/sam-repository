{"ast":null,"code":"import { call, put } from \"@redux-saga/core/effects\";\nimport { doAddStories } from \"../actions/story\";\nimport axios from \"axios\";\nconst HN_BASE_URL = 'http://hn.algolia.com/api/v1/search?query=';\n\nconst fetchStories = query => {\n  axios.get(\"\".concat(HN_BASE_URL, \" \").concat(query)).then(response => {\n    console.log('response', response);\n    return response;\n  }).catch(error => console.log(\"error\", error));\n};\n\nfunction* handleFetchStories({\n  query\n}) {\n  const result = yield call(fetchStories, query);\n  yield put(doAddStories(result.hits));\n}\n\nexport { handleFetchStories };","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/sagas/story.js"],"names":["call","put","doAddStories","axios","HN_BASE_URL","fetchStories","query","get","then","response","console","log","catch","error","handleFetchStories","result","hits"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,0BAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,4CAApB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BH,EAAAA,KAAK,CAACI,GAAN,WAAaH,WAAb,cAA4BE,KAA5B,GACKE,IADL,CACUC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,WAAOA,QAAP;AACH,GAJL,EAKKG,KALL,CAKWC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CALpB;AAMH,CAPD;;AAQA,UAAUC,kBAAV,CAA6B;AAAER,EAAAA;AAAF,CAA7B,EAAwC;AACpC,QAAMS,MAAM,GAAG,MAAMf,IAAI,CAACK,YAAD,EAAeC,KAAf,CAAzB;AACA,QAAML,GAAG,CAACC,YAAY,CAACa,MAAM,CAACC,IAAR,CAAb,CAAT;AACH;;AAED,SAASF,kBAAT","sourcesContent":["import { call, put } from \"@redux-saga/core/effects\";\nimport { doAddStories } from \"../actions/story\";\nimport axios from \"axios\";\n\nconst HN_BASE_URL = 'http://hn.algolia.com/api/v1/search?query=';\n\nconst fetchStories = query => {\n    axios.get(`${HN_BASE_URL} ${query}`)\n        .then(response => {\n            console.log('response', response);\n            return response\n        })\n        .catch(error => console.log(\"error\", error))\n}\nfunction* handleFetchStories({ query }) {\n    const result = yield call(fetchStories, query);\n    yield put(doAddStories(result.hits))\n}\n\nexport { handleFetchStories }"]},"metadata":{},"sourceType":"module"}