{"ast":null,"code":"import _objectWithoutProperties from \"/home/ram/Downloads/React-Projects/react-redux-crud-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/common/form.jsx\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCheckbox = ({\n      input,\n      label\n    }) => {\n      return React.createElement(Checkbox, {\n        label: label,\n        checked: input.value ? true : false,\n        onCheck: input.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    };\n\n    this.renderRadioGroup = (_ref) => {\n      let input = _ref.input,\n          rest = _objectWithoutProperties(_ref, [\"input\"]);\n\n      return React.createElement(RadioGroup, Object.assign({}, input, rest, {\n        valueSelected: input.value,\n        onChange: (event, value) => input.onChange(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    };\n\n    this.renderSelectField = (_ref2) => {\n      let input = _ref2.input,\n          label = _ref2.label,\n          _ref2$meta = _ref2.meta,\n          touched = _ref2$meta.touched,\n          error = _ref2$meta.error,\n          children = _ref2.children,\n          custom = _objectWithoutProperties(_ref2, [\"input\", \"label\", \"meta\", \"children\"]);\n\n      return React.createElement(Select, Object.assign({\n        floatingLabelText: label,\n        errorText: touched && error\n      }, input, {\n        onChange: (event, index, value) => input.onChange(value),\n        children: children\n      }, custom, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    };\n\n    this.renderTextField = (_ref3) => {\n      let input = _ref3.input,\n          label = _ref3.label,\n          _ref3$meta = _ref3.meta,\n          touched = _ref3$meta.touched,\n          error = _ref3$meta.error,\n          custom = _objectWithoutProperties(_ref3, [\"input\", \"label\", \"meta\"]);\n\n      return React.createElement(TextField, Object.assign({\n        hintText: label,\n        floatingLabelText: label,\n        errorText: touched && error\n      }, input, custom, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    };\n\n    this.inputRender = ({\n      input,\n      label,\n      name,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TextField, Object.assign({\n        variant: \"outlined\"\n      }, input, {\n        required: true,\n        fullWidth: true,\n        label: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" \", error);\n    }\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/components/common/form.jsx"],"names":["React","Component","TextField","RadioGroup","Checkbox","Select","Form","renderCheckbox","input","label","value","onChange","renderRadioGroup","rest","event","renderSelectField","meta","touched","error","children","custom","index","renderTextField","inputRender","name","renderError"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\n\nclass Form extends Component {  \n  // check box \n  renderCheckbox = ({ input, label }) => {\n    return (\n     <Checkbox\n         label={label}\n         checked={input.value ? true : false}\n         onCheck={input.onChange}\n         />\n      )\n  }\n   // ratio\n  renderRadioGroup = ({ input, ...rest }) => {\n   return (\n      <RadioGroup\n         {...input}\n         {...rest}\n         valueSelected={input.value}\n         onChange={(event, value) => input.onChange(value)}\n      />\n   )\n }\n // select\n  renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => {\n    return (\n      <Select\n        floatingLabelText={label}\n        errorText={touched && error}\n        {...input}\n        onChange={(event, index, value) => input.onChange(value)}\n        children={children}\n        {...custom}\n        />\n     )\n  }\n   \n  renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => {\n    return (\n       <TextField\n          hintText={label}\n          floatingLabelText={label}\n          errorText={touched && error}\n          {...input}\n          {...custom}\n         />\n     )\n   }\n\n  // input\n inputRender = ({input,label, name, meta}) => {\n        return(\n         <div className=\"form-group\">\n           \n            <TextField\n                variant=\"outlined\"\n                {...input }\n                required\n                fullWidth\n                label={label}\n               />\n\n            { this.renderError(meta) }\n         </div>\n        )\n   }\n\n   renderError({ error,touched }) {\n      if(touched && error ){\n         return (\n            <div> {error}</div>\n         );\n      }\n    }\n}\n\nexport default Form;\n\n"]},"metadata":{},"sourceType":"module"}