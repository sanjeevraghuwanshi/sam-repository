{"ast":null,"code":"import { API_URL } from '../api';\nimport { GET_PRODUCTS, CREATE_PRODUCT, UPDATE_PRODUCT, DELETE_PRODUCT } from './actionTypes';\nimport axios from 'axios';\nexport function getProducts() {\n  return dispatch => {\n    axios.get(\"\".concat(API_URL, \"/products\")).then(response => dispatch(getProductsSuccess(response.data))).catch(error => console.error('getAPIProducts failed:', error));\n  };\n}\nexport function getProductsSuccess(payload) {\n  return {\n    type: GET_PRODUCTS,\n    payload\n  };\n}\nexport function createProduct(payload) {\n  return dispatch => {\n    axios.post(\"\".concat(API_URL, \"/products\"), payload).then(() => dispatch(createProductSuccess(payload))).catch(error => console.error('createProduct failed:', error));\n  };\n}\nexport function createProductSuccess(payload) {\n  return {\n    type: CREATE_PRODUCT,\n    payload\n  };\n}\nexport function updateProduct(payload) {\n  return dispatch => {\n    axios.put(\"\".concat(API_URL, \"/products/\").concat(payload.id), payload).then(() => dispatch(updateProductSuccess(payload))).catch(error => console.error('updateProduct failed:', error));\n  };\n}\nexport function updateProductSuccess(payload) {\n  return {\n    type: UPDATE_PRODUCT,\n    payload\n  };\n}\nexport function deleteProduct(id) {\n  return dispatch => {\n    axios.delete(\"\".concat(API_URL, \"/products/\").concat(id)).then(() => dispatch(deleteProductSuccess(id))).catch(error => console.error('deleteProduct failed:', error));\n  };\n}\n\nfunction deleteProductSuccess(id) {\n  return {\n    type: DELETE_PRODUCT,\n    id\n  };\n}","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/actions/productActions.js"],"names":["API_URL","GET_PRODUCTS","CREATE_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","axios","getProducts","dispatch","get","then","response","getProductsSuccess","data","catch","error","console","payload","type","createProduct","post","createProductSuccess","updateProduct","put","id","updateProductSuccess","deleteProduct","delete","deleteProductSuccess"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,eALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAOC,QAAQ,IAAI;AACjBF,IAAAA,KAAK,CACFG,GADH,WACUR,OADV,gBAEGS,IAFH,CAEQC,QAAQ,IAAIH,QAAQ,CAACI,kBAAkB,CAACD,QAAQ,CAACE,IAAV,CAAnB,CAF5B,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC,CAHlB;AAID,GALD;AAMD;AAED,OAAO,SAASH,kBAAT,CAA4BK,OAA5B,EAAqC;AAC1C,SAAO;AAAEC,IAAAA,IAAI,EAAEhB,YAAR;AAAsBe,IAAAA;AAAtB,GAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBF,OAAvB,EAAgC;AACrC,SAAOT,QAAQ,IAAI;AACjBF,IAAAA,KAAK,CACFc,IADH,WACWnB,OADX,gBAC+BgB,OAD/B,EAEGP,IAFH,CAEQ,MAAMF,QAAQ,CAACa,oBAAoB,CAACJ,OAAD,CAArB,CAFtB,EAGGH,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAHlB;AAID,GALD;AAMD;AAED,OAAO,SAASM,oBAAT,CAA8BJ,OAA9B,EAAuC;AAC5C,SAAO;AAAEC,IAAAA,IAAI,EAAEf,cAAR;AAAwBc,IAAAA;AAAxB,GAAP;AACD;AAED,OAAO,SAASK,aAAT,CAAuBL,OAAvB,EAAgC;AACrC,SAAOT,QAAQ,IAAI;AACjBF,IAAAA,KAAK,CACFiB,GADH,WACUtB,OADV,uBAC8BgB,OAAO,CAACO,EADtC,GAC4CP,OAD5C,EAEGP,IAFH,CAEQ,MAAMF,QAAQ,CAACiB,oBAAoB,CAACR,OAAD,CAArB,CAFtB,EAGGH,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAHlB;AAID,GALD;AAMD;AAED,OAAO,SAASU,oBAAT,CAA8BR,OAA9B,EAAuC;AAC5C,SAAO;AAAEC,IAAAA,IAAI,EAAEd,cAAR;AAAwBa,IAAAA;AAAxB,GAAP;AACD;AAED,OAAO,SAASS,aAAT,CAAuBF,EAAvB,EAA2B;AAChC,SAAOhB,QAAQ,IAAI;AACjBF,IAAAA,KAAK,CACFqB,MADH,WACa1B,OADb,uBACiCuB,EADjC,GAEGd,IAFH,CAEQ,MAAMF,QAAQ,CAACoB,oBAAoB,CAACJ,EAAD,CAArB,CAFtB,EAGGV,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAHlB;AAID,GALD;AAMD;;AAED,SAASa,oBAAT,CAA8BJ,EAA9B,EAAkC;AAChC,SAAO;AAAEN,IAAAA,IAAI,EAAEb,cAAR;AAAwBmB,IAAAA;AAAxB,GAAP;AACD","sourcesContent":["import { API_URL } from '../api'\nimport {\n  GET_PRODUCTS,\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  DELETE_PRODUCT\n} from './actionTypes'\nimport axios from 'axios'\n\nexport function getProducts() {\n  return dispatch => {\n    axios\n      .get(`${API_URL}/products`)\n      .then(response => dispatch(getProductsSuccess(response.data)))\n      .catch(error => console.error('getAPIProducts failed:', error))\n  }\n}\n\nexport function getProductsSuccess(payload) {\n  return { type: GET_PRODUCTS, payload }\n}\n\nexport function createProduct(payload) {\n  return dispatch => {\n    axios\n      .post(`${API_URL}/products`, payload)\n      .then(() => dispatch(createProductSuccess(payload)))\n      .catch(error => console.error('createProduct failed:', error))\n  }\n}\n\nexport function createProductSuccess(payload) {\n  return { type: CREATE_PRODUCT, payload }\n}\n\nexport function updateProduct(payload) {\n  return dispatch => {\n    axios\n      .put(`${API_URL}/products/${payload.id}`, payload)\n      .then(() => dispatch(updateProductSuccess(payload)))\n      .catch(error => console.error('updateProduct failed:', error))\n  }\n}\n\nexport function updateProductSuccess(payload) {\n  return { type: UPDATE_PRODUCT, payload }\n}\n\nexport function deleteProduct(id) {\n  return dispatch => {\n    axios\n      .delete(`${API_URL}/products/${id}`)\n      .then(() => dispatch(deleteProductSuccess(id)))\n      .catch(error => console.error('deleteProduct failed:', error))\n  }\n}\n\nfunction deleteProductSuccess(id) {\n  return { type: DELETE_PRODUCT, id }\n}\n"]},"metadata":{},"sourceType":"module"}