{"ast":null,"code":"var _jsxFileName = \"/home/ram/Downloads/React-Projects/react-redux-crud-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./index.css\";\nimport store from \"./store\";\nimport { STORY_ARCHIVE } from './constants/actionTypes';\nimport { getReadableStories } from './selectors/story';\nimport { doArchiveStory } from './actions/archive';\n\nfunction render() {\n  ReactDOM.render(React.createElement(App, {\n    stories: getReadableStories(store.getState()),\n    onArchive: id => store.dispatch(doArchiveStory(id)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), document.getElementById('root'));\n}\n\nstore.subscribe(render);\nrender();","map":{"version":3,"sources":["/home/ram/Downloads/React-Projects/react-redux-crud-app/src/index.js"],"names":["React","ReactDOM","App","store","STORY_ARCHIVE","getReadableStories","doArchiveStory","render","getState","id","dispatch","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,SAASC,MAAT,GAAkB;AACdN,EAAAA,QAAQ,CAACM,MAAT,CAAgB,oBAAC,GAAD;AACZ,IAAA,OAAO,EAAEF,kBAAkB,CAACF,KAAK,CAACK,QAAN,EAAD,CADf;AAEZ,IAAA,SAAS,EAAEC,EAAE,IAAIN,KAAK,CAACO,QAAN,CAAeJ,cAAc,CAACG,EAAD,CAA7B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAIIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ;AAKH;;AAEDT,KAAK,CAACU,SAAN,CAAgBN,MAAhB;AACAA,MAAM","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport \"./index.css\";\nimport store from \"./store\";\nimport { STORY_ARCHIVE } from './constants/actionTypes';\nimport { getReadableStories } from './selectors/story';\nimport { doArchiveStory } from './actions/archive';\n\nfunction render() {\n    ReactDOM.render(<App\n        stories={getReadableStories(store.getState())}\n        onArchive={id => store.dispatch(doArchiveStory(id))}\n    />,\n        document.getElementById('root'));\n}\n\nstore.subscribe(render);\nrender();\n\n"]},"metadata":{},"sourceType":"module"}